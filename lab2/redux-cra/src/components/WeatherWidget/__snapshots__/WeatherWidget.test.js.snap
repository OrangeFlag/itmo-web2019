// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WeatherWidget test should render correctly when error 1`] = `
<WeatherWidget
  cloudiness={10}
  humidity={8}
  icon="04d"
  mercuryPressure={5}
  status="error"
  temperature={20}
  town="mainTown"
  wind={10}
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "bwaJXF",
            "rules": Array [
              "
  display: flex;
  flex-flow: row wrap;
  align-items: center;

  width: 76%;

  background-color: #0138a5;
  background-color: ___CSS_1___;

  color: #ffffff;
  color: ___CSS_2___;
  
  padding: 12px 10%;
  padding-top: ___CSS_3___;
  padding-bottom: ___CSS_4___;
  
  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.30);
  margin: 7px;


  * {
    margin-right: 16px;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa bwaJXF"
      >
        <styled.p>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "hYMqqw",
                  "rules": Array [
                    "
  font-size: 1.5em;
  text-align: center;
  color: #f27670;
",
                  ],
                },
                "displayName": "styled.p",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "p",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <p
              className="sc-bxivhb hYMqqw"
            >
              Ошибка при запросе погоды
            </p>
          </StyledComponent>
        </styled.p>
      </div>
    </StyledComponent>
  </styled.div>
</WeatherWidget>
`;

exports[`WeatherWidget test should render correctly when loading 1`] = `
<WeatherWidget
  cloudiness={10}
  humidity={8}
  icon="04d"
  mercuryPressure={5}
  status="loading"
  temperature={20}
  town="Moscow"
  wind={10}
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "bwaJXF",
            "rules": Array [
              "
  display: flex;
  flex-flow: row wrap;
  align-items: center;

  width: 76%;

  background-color: #0138a5;
  background-color: ___CSS_1___;

  color: #ffffff;
  color: ___CSS_2___;
  
  padding: 12px 10%;
  padding-top: ___CSS_3___;
  padding-bottom: ___CSS_4___;
  
  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.30);
  margin: 7px;


  * {
    margin-right: 16px;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa bwaJXF"
      >
        <styled.p>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "Fwlel",
                  "rules": Array [
                    "
  font-size: 1.5em;
  text-align: center;
  color: #e1da8a;
",
                  ],
                },
                "displayName": "styled.p",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "p",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <p
              className="sc-htpNat Fwlel"
            >
              Подождите, данные загружаются
            </p>
          </StyledComponent>
        </styled.p>
        <br />
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "clutZI",
                  "rules": Array [
                    "
    border: 16px solid #f3f3f3; /* Light grey */
    border-top: 16px solid #3498db; /* Blue */
    border-radius: 50%;
    width: 120px;
    height: 120px;
    animation: ",
                    Keyframes {
                      "id": "sc-keyframes-iVXCSc",
                      "inject": [Function],
                      "name": "iVXCSc",
                      "rules": Array [
                        "@-webkit-keyframes iVXCSc{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                        "@keyframes iVXCSc{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                      ],
                      "toString": [Function],
                    },
                    " 2s linear infinite;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="sc-bwzfXH clutZI"
            />
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</WeatherWidget>
`;

exports[`WeatherWidget test should render correctly when uploaded 1`] = `
<WeatherWidget
  cloudiness={10}
  humidity={8}
  icon="04d"
  mercuryPressure={5}
  status="ok"
  temperature={20}
  town="Moscow"
  wind={10}
>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "bwaJXF",
            "rules": Array [
              "
  display: flex;
  flex-flow: row wrap;
  align-items: center;

  width: 76%;

  background-color: #0138a5;
  background-color: ___CSS_1___;

  color: #ffffff;
  color: ___CSS_2___;
  
  padding: 12px 10%;
  padding-top: ___CSS_3___;
  padding-bottom: ___CSS_4___;
  
  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.30);
  margin: 7px;


  * {
    margin-right: 16px;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa bwaJXF"
      >
        Moscow
        <img
          alt=""
          src="http://openweathermap.org/img/wn/04d@2x.png"
        />
        <p>
          Temperature: 
          20
           °C
          <br />
          Wind: 
          10
           m/s
          <br />
          Cloudiness: 
          10
           %
          <br />
          Millimeter of mercury: 
          5
           mm
          <br />
          Humidity: 
          8
           %
          <br />
        </p>
      </div>
    </StyledComponent>
  </styled.div>
</WeatherWidget>
`;
