// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header test should render correctly 1`] = `
<Header>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "cwIgTX",
            "rules": Array [
              "
  display: flex;
  flex-flow: row wrap;
  align-items: center;

  width: 76%;

  background-color: #0138a5;
  background-color: ___CSS_1___;

  color: #ffffff;
  color: ___CSS_2___;
  
  padding: 12px 10%;
  padding-top: ___CSS_3___;
  padding-bottom: ___CSS_4___;
  
  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.30);
  margin: 7px;


  * {
    margin-right: 16px;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bwzfXH cwIgTX"
      >
        <styled.h1>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "dHlkiy",
                  "rules": Array [
                    "
    float: left;
",
                  ],
                },
                "displayName": "styled.h1",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "h1",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <h1
              className="sc-htpNat dHlkiy"
            >
              Погода здесь
            </h1>
          </StyledComponent>
        </styled.h1>
        <Button>
          <styled.button
            type="button"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "JEQYc",
                    "rules": Array [
                      "
    border: 0;
    padding: 13px 16px;
    // height: 50px;
    // line-height: 50px;
    // border-radius: ___CSS_0___;
    // box-shadow: ___CSS_1___;
    outline: none;
    display: inline-block;
    text-align: center;
    text-decoration: none;
    font-size: 15px;
    border-radius: 4px;

    &:hover {
        text-decoration: none;
        background: #cccccc;
        color: ___CSS_3___;
    }
   

    &:focus {
        text-decoration: none;
        outline: none;
    }
",
                    ],
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "button",
                  "toString": [Function],
                  "usesTheme": false,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              type="button"
            >
              <button
                className="sc-bdVaJa JEQYc"
                type="button"
              >
                Обновить геолокацию
              </button>
            </StyledComponent>
          </styled.button>
        </Button>
      </div>
    </StyledComponent>
  </styled.div>
</Header>
`;
